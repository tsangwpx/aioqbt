---
# Build and upload a Python package to PyPI.org when specific tags are pushed.

name: publish

on:
  push:
    tags:
      - v[0-9]+.*

jobs:
  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install build

      - name: Build package
        run: python -m build

      - name: Compute hashes
        run: sha256sum -b dist/*

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

  test:
    name: Test package
    runs-on: ubuntu-latest
    needs: [build]
    strategy:
      matrix:
        python-version: ["3.7", "3.8", "3.9", "3.10", "3.11"]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: dist
          path: dist

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install qbittorrent-nox
        run: |
          sudo apt-get install --yes --no-install-recommends qbittorrent-nox

      - name: Install package
        run: |
          wheel="$(find dist -type f -name "aioqbt-*.whl")"
          # Count lines. https://stackoverflow.com/a/42399738/1692260
          count=$(echo -n "$wheel" | grep -c "^")

          if [[ $count -ne 1 ]]; then
            echo "No wheel or multiple wheel found: $wheel"
            exit 1
          fi

          python -m pip install --upgrade pip
          python -m pip install "${wheel}[test]"

      - name: Run pytest
        run: pytest

  release:
    name: Create draft release
    runs-on: ubuntu-latest
    needs: [build, test]
    permissions:
      contents: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: dist
          path: dist

      - name: Create draft release
        run: |
          gh release create \
            --draft \
            --generate-notes \
            --target "$GITHUB_SHA" \
            --title "$GITHUB_REF_NAME" \
            --verify-tag \
            "$GITHUB_REF_NAME" \
            dist/*
        env:
          GH_REPO: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish:
    name: Publish package to PyPI
    runs-on: ubuntu-latest
    needs: [build, test]
    permissions:
      id-token: write
    if: github.repository == 'tsangwpx/aioqbt'

    # wait environment to be approved
    environment: publish
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4.1.7
        with:
          name: dist
          path: dist

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          print-hash: true
